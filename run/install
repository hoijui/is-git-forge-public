#!/usr/bin/env bash
# SPDX-FileCopyrightText: 2023 Robin Vobruba <hoijui.quaero@gmail.com>
# SPDX-License-Identifier: AGPL-3.0-only
#
# See the output of "$0 -h" for details.

# Exit immediately on each error and unset variable;
# see: https://vaneyckt.io/posts/safer_bash_scripts_with_set_euxo_pipefail/
#set -Eeuo pipefail
set -eu

INSTALL_ROOT_DIR_DEFAULT_USER="$HOME/.local"
INSTALL_ROOT_DIR_DEFAULT_GLOBAL="/usr/local"
INSTALL_ROOT_DIR_DEFAULT="$INSTALL_ROOT_DIR_DEFAULT_USER"

script_path="$(readlink -f "${BASH_SOURCE[0]}")"
script_dir="$(dirname "$script_path")"
script_name="$(basename "$script_path")"

install_root="${1:-"$INSTALL_ROOT_DIR_DEFAULT"}"

print_help() {

	echo "$script_name - Returns a sorted list of unique names"
	echo "of branches within the current repo."
	echo
	echo "Usage:"
	echo "  $script_name [OPTION...] <INSTALL_ROOT_DIR>"
	echo "Options:"
	echo "  -h, --help              Shows this help message and exit"
	echo "Examples:"
	echo "  $script_name --help"
	echo "  $script_name ~/.local"
	echo "  $script_name \"$INSTALL_ROOT_DIR_DEFAULT_GLOBAL\""
}

# read command-line args
POSITIONAL=()
while [[ $# -gt 0 ]]
do
	arg="$1"
	shift # $2 -> $1, $3 -> $2, ...

	case "$arg" in
		-h|--help)
			print_help
			exit 0
			;;
		*) # non-/unknown option
			POSITIONAL+=("$arg") # save it in an array for later
			;;
	esac
done
set -- "${POSITIONAL[@]}" # restore positional parameters

install -d -m 755 "$install_root"/bin
install -m 755 "$script_dir/../src/software"/* "$install_root/bin/"

echo "done. (Installing to $install_root/bin)"
